<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.nervelife</groupId>
	<artifactId>spring-boot-gcp-java</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<name>spring-boot-gcp-java</name>
	<description>This demo project walks you through the process of creating high scalable Web/REST Services using spring boot and Google Cloud APIs.</description>
	<properties>
		<java.version>11</java.version>
		<spring-cloud-gcp.version>2.0.0</spring-cloud-gcp.version>
		<spring-cloud.version>2020.0.1</spring-cloud.version>
		<spring-experimental>0.9.0-SNAPSHOT</spring-experimental>
		<spring-cloud-gcp.version>1.2.6.RELEASE</spring-cloud-gcp.version>
		<native.build.args>
			-H:+ReportExceptionStackTraces 
			--verbose 
			--no-fallback 
			-Dspring.graal.remove-unused-autoconfig=true 
			-Dspring.graal.remove-yaml-support=true 
			-Dspring.graal.verbose=true 
			-Dspring.graal.skip-logback=false  
			-Dspring.native.remove-yaml-support=true
			-Dspring.spel.ignore=true
			-Dspring.xml.ignore=true
			--allow-incomplete-classpath 
			--report-unsupported-elements-at-runtime 
			--install-exit-handlers
			--enable-https 
			--enable-http 
			--enable-all-security-services
		</native.build.args>
	</properties>
	<dependencies>

		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-graalvm-support</artifactId>
			<version>0.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>${spring-experimental}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-websocket</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.experimental</groupId>
			<artifactId>tomcat-embed-programmatic</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-starter-data-datastore</artifactId>
		</dependency>	

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
	
 </dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-gcp-dependencies</artifactId>
				<version>${spring-cloud-gcp.version}</version>
				<type>pom</type>
				<scope>import</scope>
				</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- ... -->
			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>${spring-experimental}</version>
				<executions>
					<execution>
						<id>test-generate</id>
						<goals>
							<goal>test-generate</goal>
						</goals>
					</execution>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>spring-boot</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Enable building a native image using a Spring AOT and buildpacks plugin -->
		<profile>
			<id>spring-native</id>
			<build>
				<finalName>
					${project.artifactId}
				</finalName>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<image>
								<builder>paketobuildpacks/builder:tiny</builder>
								<env>
									<BP_BOOT_NATIVE_IMAGE>1</BP_BOOT_NATIVE_IMAGE>
									<BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS>
										${native.build.args}
									</BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS>
								</env>
							</image>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
		<repository>
			<id>spring-snapshot</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
		<pluginRepository>
			<id>spring-snapshot</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
    </pluginRepositories>

</project>
